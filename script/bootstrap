#!/bin/bash
# script/bootstrap
set -e

# Color variables for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

cd "$(dirname "$0")/.."

# Check Python version (requires 3.10+)
# Try different Python commands in order of preference
python_cmd=""
for cmd in "python3.10" "python3.11" "python3.12" "python3" "python"; do
    if command -v "$cmd" &> /dev/null; then
        python_cmd="$cmd"
        break
    fi
done

if [ -z "$python_cmd" ]; then
    echo -e "==> ${RED}Error: No Python installation found${NC}"
    echo -e "==> ${YELLOW}Please install Python 3.10 or higher${NC}"
    echo -e "   You can use pyenv: pyenv install 3.10.0"
    echo -e "   Or download from: https://www.python.org/downloads/"
    exit 1
fi

python_version=$($python_cmd --version 2>&1 | grep -oE '[0-9]+\.[0-9]+' | head -1)
required_version="3.10"

if [ "$(printf '%s\n' "$required_version" "$python_version" | sort -V | head -n1)" != "$required_version" ]; then
    echo -e "==> ${RED}Error: Python 3.10+ is required${NC}"
    echo -e "==> ${YELLOW}Current Python version: ${python_version} (from $python_cmd)${NC}"
    echo -e "==> ${YELLOW}Please upgrade to Python 3.10 or higher${NC}"
    echo -e "   You can use pyenv: pyenv install 3.10.0"
    echo -e "   Or download from: https://www.python.org/downloads/"
    echo -e "   Or use uv to manage Python versions: uv python install 3.10"
    exit 1
fi

echo -e "==> ${GREEN}Python version check passed: ${python_version} (using $python_cmd)${NC}"

# Check if uv is installed
if ! command -v uv &> /dev/null; then
    echo -e "==> ${RED}Error: uv is not installed${NC}"
    echo -e "==> ${YELLOW}Please install uv first:${NC}"
    echo -e "   curl -LsSf https://astral.sh/uv/install.sh | sh"
    echo -e "   or visit: https://docs.astral.sh/uv/getting-started/installation/"
    exit 1
fi

# Check for Brewfile on macOS
if [ -f "Brewfile" ] && [ "$(uname -s)" = "Darwin" ]; then
    brew bundle check > /dev/null 2>&1 || {
        echo -e "==> ${GREEN}Installing ${RED}Brew${GREEN} dependencies${NC}"
        brew bundle
    }
fi

echo -e "==> ${GREEN}Installing all Python dependencies with uv (shared and project-wide)...${NC}"
uv sync

echo -e "==> ${GREEN}Installing packages in development mode${NC}"
uv pip install -e .

echo -e "==> ${GREEN}Setting up development environment${NC}"
echo -e "==> ${BLUE}All shared dependencies (pytest, ruff, requests, etc.) are now always installed for all subprojects.${NC}"
echo -e "==> ${GREEN}Remember to commit your ${RED}uv.lock${GREEN} file${NC}"
echo -e "==> ${GREEN}Bootstrap complete! ğŸš€${NC}"

